const modelFieldsMap = {
  Appointment: [
    "id",
    "client_id",
    "created_by",
    "primary_user_id",
    "healthcare_provider_id",
    "title",
    "appointment_type",
    "location",
    "start_time",
    "end_time",
    "notes",
    "post_appointment_notes",
    "reminder_sent",
    "active",
  ],
  ClientContact: [
    "id",
    "client_id",
    "contact_type",
    "first_name",
    "last_name",
    "relationship",
    "phone",
    "email",
    "address",
    "notes",
    "active",
  ],
  Document: [
    "id",
    "client_id",
    "primary_user_id",
    "uploaded_by",
    "upload_type",
    "category",
    "document_type",
    "title",
    "description",
    "file_name",
    "file_size",
    "file_type",
    "version",
    "active",
  ],

  HealthcareProvider: [
    "id",
    "client_id",
    "provider_type",
    "provider_name",
    "specialty",
    "address",
    "phone",
    "fax",
    "last_visit",
    "next_visit",
    "notes",
    "active",
  ],
  ClientMedical: [
    "id",
    "client_id",
    "diagnoses",
    "allergies",
    "dietary_restrictions",
    "surgical_history",
    "cognitive_status",
    "last_cognitive_screening",
    "cognitive_score",
    "notes",
  ],
  ClientMedication: [
    "id",
    "client_id",
    "medication_name",
    "dosage",
    "frequency",
    "purpose",
    "prescribing_doctor",
    "start_date",
    "end_date",
    "refill_due",
    "notes",
    "active",
  ],
  Client: [
    "id",
    "primary_user_id",
    "first_name",
    "last_name",
    "date_of_birth",
    "ssn",
    "address",
    "city",
    "state",
    "zip",
    "phone",
    "relation",
    "gender",
    "marital_status",
    "language",
    "living_situation",
    "code_status",
    "advance_directive",
    "preferred_hospital",
    "hospital_address",
    "hospital_phone",
    "pharmacy_name",
    "pharmacy_address",
    "pharmacy_phone",
    "pharmacy_fax",
    "notes",
    "active",
    "race",
    "last_care_plan_date",
  ],
  FaceSheetShortForm: [
    "id",
    "client_id",
    "insurance",
    "medicare",
    "group_number",
    "id_number",
    "mpoa",
    "mpoa_phone",
    "mpoa_address",
    "dpoa",
    "dpoa_phone",
    "dpoa_address",
  ],
  Message: ["id", "thread_id", "sender_id", "content", "read_at"],
  Note: ["id", "text", "client_id", "is_edited"],
  User: [
    "id",
    "primary_user_id",
    "email",
    "cognito_id",
    "first_name",
    "last_name",
    "phone",
    "role",
    "email_verified",
    "avatar",
    "last_login",
    "socket_id",
    "active",
    "relation",
    "stripe_customer_id",
    "subscription_status",
  ],
};

function findModelsByField(field) {
  return Object.entries(modelFieldsMap)
    .filter(([_, fields]) => fields.includes(field))
    .map(([model]) => model);
}

console.log(findModelsByField("notes"));

module.exports = { modelFieldsMap, findModelsByField };

// node test-scripts/model.fields.js
