const modelFieldsMap = {
  CareRecipientQuestionnaire: [
    "id",
    "client_id",
    "primary_user_id",
    "support_system_rating",
    "support_system_problems",
    "emergency_contacts",
    "house_cleaning_agency",
    "house_cleaning_satisfaction",
    "house_cleaning_frequency",
    "home_aid_agency",
    "home_aid_satisfaction",
    "home_aid_frequency",
    "home_health_agency",
    "home_health_satisfaction",
    "home_health_frequency",
    "maintenance_agency",
    "maintenance_satisfaction",
    "maintenance_frequency",
    "other_help_agency",
    "other_help_satisfaction",
    "other_help_frequency",
    "living_environment_type",
    "home_environment_adequacy",
    "problem_areas_daily_living",
    "problem_areas_explanation",
    "problems_risks",
    "nutrition_concerns",
    "self_care_capacity_summary",
    "memory_problems",
    "emotional_health_notes",
    "personality_coping",
    "recent_behavior_changes",
    "recipient_shares_concerns",
    "recipient_shares_concerns_notes",
    "emotional_problems_history",
    "emotional_problems_treatment",
    "emotional_problems_notes",
    "recent_losses_impact",
    "social_life_notes",
    "occupation_profession",
    "retirement_date",
    "retirement_adjustment",
    "major_concerns",
    "areas_accepting_help",
  ],
  CaregiverInformationSheet: [
    "id",
    "primary_user_id",
    "client_id",
  
    // Basic Information
    "name",
    "nickname_preferred_name",
  
    // Schedule Information
    "wake_time",
    "sleep_time",
    "breakfast_time",
    "lunch_time",
    "snacks_time",
    "activity_time",
    "nap_time",
    "dinner_time",
    "medication_time",
  
    // Preferences and Behavior
    "likes",
    "dislikes",
    "redirection_techniques",
    "triggers",
    "helpful_information",
    "documentation",
  ],
  Checklists: [
    "id",
    "client_id",
    "primary_user_id",
    "checklist_type",
    "checklist_data",
  ],
  Appointment: [
    "id",
    "client_id",
    "created_by",
    "primary_user_id",
    "healthcare_provider_id",
    "title",
    "appointment_type",
    "location",
    "start_time",
    "end_time",
    "notes",
    "post_appointment_notes",
    "reminder_sent",
    "active",
  ],
  ClientBloodwork: [
    "id",
    "client_id",
    "primary_user_id",
    "name",
    "date",
    "results",
    "ordered_by",
    "repeat",
  ],
  ClientCaregiverAgency: [
    "id",
    "client_id",
    "primary_user_id",
    "name",
    "phone",
    "address",
    "point_of_contact",
    "caregiver_schedule",
    "caregiver_duties",
    "important_information",
  ],
  ClientContact: [
    "id",
    "client_id",
    "contact_type",
    "first_name",
    "last_name",
    "relationship",
    "phone",
    "email",
    "address",
    "notes",
    "active",
  ],
  Document: [
    "id",
    "client_id",
    "primary_user_id",
    "uploaded_by",
    "upload_type",
    "category",
    "document_type",
    "title",
    "description",
    "file_name",
    "file_size",
    "file_type",
    "version",
    "active",
  ],
  ClientFriendContact: [
    "id",
    "client_id",
    "name",
    "address",
    "relationship",
    "phone",
    "help_description",
  ],
  HealthcareProvider: [
    "id",
    "client_id",
    "provider_type",
    "provider_name",
    "specialty",
    "address",
    "phone",
    "fax",
    "last_visit",
    "next_visit",
    "notes",
    "specialty_provider",
    "follow_up",
    "for_what_problem",
    "active",
  ],
  
  ClientHelper: [
    "id",
    "client_id",
    "name",
    "address",
    "relationship",
    "phone",
    "help_description",
  ],
  ClientHomeHealthAgency: [
    "id",
    "client_id",
    "primary_user_id",
    "name",
    "phone",
    "address",
    "fax",
    "schedule",
    "prescribing_doctor",
    "service_received",
    "start_date",
    "discharge_date",
  ],
  ClientHospitalization: [
    "id",
    "primary_user_id",
    "client_id",
    "admitting_diagnosis",
    "treatment",
  ],
  ClientInsurance: [
    "id",
    "client_id",
    "insurance_type",
    "medicare_a",
    "medicare_b",
    "medicare_numbers",
    "supplement_plan",
    "provider",
    "policy_number",
    "phone",
    "mental_health_coverage",
    "hmo",
    "hmo_policy_number",
    "hmo_phone",
    "long_term_care_insurance_name",
    "long_term_care_insurance_policy_number",
    "long_term_care_insurance_phone",
  ],
  
  ClientMedicationCondition: [
    "id",
    "client_id",
    "primary_user_id",
    "condition",
    "onset_date",
    "problem",
    "treatment",
    "medications",
    "notes",
  ],
  ClientMedical: [
    "id",
    "client_id",
    "diagnoses",
    "allergies",
    "dietary_restrictions",
    "surgical_history",
    "cognitive_status",
    "last_cognitive_screening",
    "test_type",
    "cognitive_score",
    "last_checkup_date",
    "recent_hospitalization",
    "hospital_details",
    "support_system_thoughts",
    "notes",
  ],
  
  ClientMedication: [
    "id",
    "client_id",
    "medication_name",
    "dosage",
    "frequency",
    "purpose",
    "prescribing_doctor",
    "start_date",
    "end_date",
    "refill_due",
    "notes",
    "active",
  ],
  
  Client: [
    "id",
    "primary_user_id",
    "first_name",
    "last_name",
    "date_of_birth",
    "birth_place",
    "ssn",
    "address",
    "city",
    "state",
    "zip",
    "phone",
    "relation",
    "gender",
    "marital_status",
    "language",
    "living_situation",
    "code_status",
    "advance_directive",
    "preferred_hospital",
    "hospital_address",
    "hospital_phone",
    "pharmacy_name",
    "pharmacy_address",
    "pharmacy_phone",
    "pharmacy_fax",
    "race",
    "last_care_plan_date",
    "email",
    "cultural_background",
    "education",
    "religion",
    "active_religion_location",
    "date_of_divorce_or_widowhood",
    "loss_impact_description",
    "dnr",
    "trust",
    "lifecare",
    "will",
    "living_will",
    "funeral_arrangements",
    "cemetery_plot",
    "monthly_income",
    "spouse_income",
    "savings",
    "other_assets",
    "financial_problems_description",
    "notes",
    "active",
  ],
  ClientProfessionalContact: [
    "id",
    "client_id",
    "role",
    "name",
    "phone",
  ],
  
  ClientRelatives: [
    "id",
    "client_id",
    "name",
    "address",
    "home_phone",
    "work_phone",
    "relationship",
    "email",
  ],
  ClientVaccination: [
    "id",
    "client_id",
    "primary_user_id",
    "name",
    "date",
    "next_vaccine",
  ],
  EssentialDocument: [
    "id",
    "client_id",
    "primary_user_id",
    "category",
    "document_name",
    "in_place",
    "notes",
  ],
  FaceSheetShortForm: [
    "id",
    "client_id",
    "insurance",
    "medicare",
    "group_number",
    "id_number",
    "mpoa",
    "mpoa_phone",
    "mpoa_address",
    "dpoa",
    "dpoa_phone",
    "dpoa_address",
  ],
  FormsHistory: [
    "id",
    "client_id",
    "user_id",
    "primary_user_id",
    "form_type",
  ],
  HealthHistoryForm: [
    "id",
    "primary_user_id",
    "client_id",
    "date",
    "diagnosis",
    "health_concern_description",
    "onset_of_symptoms",
    "frequency_of_symptoms",
    "severity_of_symptoms",
    "hospitalization",
    "specialty_provider",
    "medication_started",
    "medication_stopped",
    "home_health",
    "what_worked",
    "notes",
  ],
  Message: [
    "id",
    "thread_id",
    "sender_id",
    "content",
    "read_at",
  ],
  User: [
    "id",
    "primary_user_id",
    "email",
    "cognito_id",
    "first_name",
    "last_name",
    "phone",
    "role",
    "email_verified",
    "avatar",
    "last_login",
    "socket_id",
    "active",
    "relation",
    "stripe_customer_id",
    "subscription_status",
  ],
  

};

function findModelsByField(field) {
  return Object.entries(modelFieldsMap)
    .filter(([_, fields]) => fields.includes(field))
    .map(([model]) => model);
}

console.log(findModelsByField("notes"));

module.exports = { modelFieldsMap, findModelsByField };

// node test-scripts/model.fields.js
